---
- name: Gather Windows ansible pings
  hosts: all
  vars:
  gather_facts: false
  tasks:
    - name: Check if inventory_hostname is an IP address
      set_fact:
        is_ip_address: "{{ inventory_hostname | regex_search('^\\d+\\.\\d+\\.\\d+\\.\\d+$') is not none }}"
      delegate_to: localhost

    - name: Resolve IP address on control node if not already an IP address
      shell: getent ahostsv4 {{ inventory_hostname }} | head -n 1 | awk '{print $1}'
      register: ip_lookup
      when: not is_ip_address
      delegate_to: localhost

    - name: Set IP address fact
      set_fact:
        host_ip: "{{ inventory_hostname if is_ip_address else ip_lookup.stdout.strip() }}"
      delegate_to: localhost

    - name: Test authentication on all windows hosts
      block:
        - name: Test Connections
          wait_for_connection:
            delay: 1
            timeout: 5

        - name: Initialize system_status_results
          set_fact:
            system_status_results: []
            app_check_results: []

        - name: Gather Ansible Ping
          win_ping:
          register: ansible_ping_output

        - name: Append Windows data to results
          set_fact:
            system_status_results: |
              {{
                system_status_results + [{
                  "hostname": inventory_hostname,
                  "ip_address": host_ip,
                  "ansible_ping": ansible_ping_output.ping,
                  "project_id": 2,
                  "task_id": awx_job_id
                }]
              }}

        - name: Send custom data to web URL
          ansible.builtin.uri:
            url: "http://172.21.184.27:8088/post/store_ansible_pings_sqlite.php"
            method: POST
            body_format: json
            body: "{{ system_status_results }}"
            headers:
              Content-Type: application/json
            status_code: 200
            return_content: True
          register: postoutput
          delegate_to: localhost

      rescue:
        - name: Rescue-Initialize system_status_results
          set_fact:
            system_status_results: []
            
        - name: Check if inventory_hostname is an IP address
          set_fact:
            is_ip_address: "{{ inventory_hostname | regex_search('^\\d+\\.\\d+\\.\\d+\\.\\d+$') is not none }}"
          delegate_to: localhost

        - name: Resolve IP address on control node if not already an IP address
          shell: getent ahostsv4 {{ inventory_hostname }} | head -n 1 | awk '{print $1}'
          register: ip_lookup
          when: not is_ip_address
          delegate_to: localhost

        - name: Set IP address fact
          set_fact:
            host_ip: "{{ inventory_hostname if is_ip_address else ip_lookup.stdout.strip() }}"
          delegate_to: localhost

        - name: Rescue-Append Windows data to results
          set_fact:
            system_status_results: |
              {{
                system_status_results + [{
                  "hostname": inventory_hostname,
                  "ip_address": host_ip,
                  "ansible_ping": "unreachable",
                  "project_id": "2",
                  "task_id": awx_job_id
                }]
              }}

        - name: Rescue-Send custom data to web URL for failed hosts
          ansible.builtin.uri:
            url: "http://172.21.184.27:8088/post/store_ansible_pings_sqlite.php"
            method: POST
            body_format: json
            body: "{{ system_status_results }}"
            headers:
              Content-Type: application/json
            status_code: 200
            return_content: True
          register: postoutput
          delegate_to: localhost
